# Generated by Django 2.0.1 on 2019-05-30 08:35

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0019_delete_filter'),
    ]

    operations = [
        migrations.CreateModel(
            name='Featured',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(default='Заголовок', max_length=200, verbose_name='Заголовок преймущества')),
                ('description', wagtail.core.fields.RichTextField(default='Описание', verbose_name='Описание преймущества')),
                ('image', models.ForeignKey(blank=True, help_text='Изображение должно быть в размером 77 на 77', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Картинка преймущества')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', models.CharField(default='Текст описание', help_text='Описание большого баннера, с фотографией', max_length=200, verbose_name='Описание баннера')),
                ('button_title', models.CharField(default='Записаться к нам', max_length=200, verbose_name='Текст кнопки на баннере')),
                ('mini_about_title', models.CharField(default='Заголовок', help_text='Заголовок для селекции о нас, который под баннером', max_length=200, verbose_name='Заголовок для селекции о нас')),
                ('mini_about_description', wagtail.core.fields.RichTextField(default='Описание', help_text='Введите описание в селекции о нас', verbose_name='Описание для селекции о нас')),
                ('mini_about_button_text', models.CharField(default='Узнать подробней', max_length=200, verbose_name='Введите текст кнопки в селекции о нас')),
                ('feature_title_text', models.CharField(default='Заголовок', help_text='Введите заголовлок по умолчанию наши преймущества', max_length=200, verbose_name='Заголовок для преймуществ')),
                ('feature_mini_description', wagtail.core.fields.RichTextField(default='Описание', help_text='Введите небольшое описание для преймуществ', verbose_name='Описание преймуществ')),
                ('gallery_title', models.CharField(default='Фотогаллерея', max_length=200, verbose_name='Название селекции фотогаллерея')),
                ('gallery_description', wagtail.core.fields.RichTextField(default='Описание', verbose_name='Описание селекции фотогаллерея')),
                ('what_they_say_about_us_title', models.CharField(default='Заголовок селекции', max_length=200, verbose_name="Селекция 'что говорят о нас' заголовок")),
                ('what_they_say_about_us_description', wagtail.core.fields.RichTextField(default='Описание', verbose_name="Селекция 'что говорят о нас' описание")),
                ('first_feedback_name', models.CharField(default='Имя', max_length=200, verbose_name='Имя первого человека который оставил отзыв')),
                ('first_feedback_description', wagtail.core.fields.RichTextField(default='Описание', verbose_name='Текст отзыва, от первого человека')),
                ('second_feedback_name', models.CharField(default='Имя', max_length=200, verbose_name='Имя второго человека который оставил отзыв')),
                ('second_feedback_description', wagtail.core.fields.RichTextField(default='Описание', verbose_name='Текст отзыва, от второго человека')),
                ('first_feedback_image', models.ForeignKey(blank=True, help_text='Изображение должно быть в разрешении 102 на 104', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение первого человека, который оставил отзыв')),
                ('mini_about_image', models.ForeignKey(blank=True, help_text='Изображение должно быть в разрешении 554 на 418', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Картинка для селекции о нас')),
                ('second_feedback_image', models.ForeignKey(blank=True, help_text='Изображение должно быть в разрешении 102 на 104', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение второго человека, который оставил отзыв')),
            ],
            options={
                'verbose_name': 'Добавить домашнюю страницу (Не трогать!)',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='featured',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='featured', to='home.HomePage'),
        ),
    ]
